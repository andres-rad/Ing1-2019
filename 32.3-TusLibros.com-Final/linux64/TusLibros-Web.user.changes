

----SNAPSHOT----(9 July 2019 20:43:38) TusLibros-Web.image priorSource: 14586977!
!CreateCartWindowModel methodsFor: 'catalog' stamp: 'ar 7/9/2019 20:53:59' prior: 50792009!
sendCatalogRequest
	catalog _ webClient catalog.
	self triggerEvent: #catalogArrived.! !
!CreateCartWindowModel methodsFor: 'catalog' stamp: 'ar 7/9/2019 20:54:06' prior: 50791062!
catalog
	^catalog keysAndValuesDo: [ :titulo :valor | catalog add: titulo, '  $', valor asString].! !

CreateCartWindow open.!

!classDefinition: #CreateCartWindowModel category: #'TusLibros-Web'!
Object subclass: #CreateCartWindowModel
	instanceVariableNames: 'username password webClient cartId catalog catalogIndex cartContents cartContentsIndex listableCatalog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros-Web'!
!CreateCartWindowModel methodsFor: 'catalog' stamp: 'ar 7/9/2019 20:55:43' prior: 50792409!
sendCatalogRequest
	catalog _ webClient catalog.
	listableCatalog _ nil.
	
	self triggerEvent: #catalogArrived.! !
!CreateCartWindowModel methodsFor: 'catalog' stamp: 'ar 7/9/2019 20:55:56' prior: 50792415!
catalog
	^listableCatalog .! !
!CreateCartWindowModel methodsFor: 'catalog' stamp: 'ar 7/9/2019 20:56:20'!
listableCatalog
	^listableCatalog .! !

CreateCartWindowModel removeSelector: #catalog!
!CreateCartWindowModel methodsFor: 'catalog' stamp: 'ar 7/9/2019 20:56:41' prior: 50792432!
sendCatalogRequest
	catalog _ webClient catalog.
	listableCatalog _ catalog keysAndValuesDo: [ :titulo :valor | catalog add: titulo, '  $', valor asString].
	
	self triggerEvent: #catalogArrived.! !
!StoreWindow methodsFor: 'as yet unclassified' stamp: 'ar 7/9/2019 20:56:50' prior: 50791100!
buildCatalogColumn
	|addToCartButton|
	catalogList _ 
		PluggableListMorph model: self model
								listGetter: #listableCatalog
								indexGetter: #catalogIndex
								indexSetter: #catalogIndex:.
	
	addToCartButton _ 
		PluggableButtonMorph model: self model
									stateGetter: nil
									action: #addToCartList
									label: 'Agregar al carrito'.
	
	^ (LayoutMorph newColumn)
					    separation: 15;
					    padding: #left;
					    addMorph: (StringMorph contents: 'Catálogo:');
					    addMorph: catalogList;
					    addMorph: addToCartButton.! !

CreateCartWindow open.!

aDefaultServerController stopListening ; destroy.!

testObjectsFactory _ TusLibrosWebTestObjectFactory new.
aSystemFacade _ testObjectsFactory tusLibrosSystemFacade. 
aDefaultServerController _ TusLibrosServerController listeningOn: 8080 withFacade: aSystemFacade.
!

CreateCartWindow open.!
!StoreWindow methodsFor: 'as yet unclassified' stamp: 'ar 7/9/2019 20:56:50' prior: 50792459!
buildCatalogColumn
	|addToCartButton|
	catalogList _ 
		PluggableListMorph model: self model
								listGetter: #listableCatalog
								indexGetter: #catalogIndex
								indexSetter: #catalogIndex:.
	
	addToCartButton _ 
		PluggableButtonMorph model: self model
									stateGetter: nil
									action: #addToCartList
									label: 'Agregar al carrito'.
	
	^ (LayoutMorph newColumn)
					    separation: 15;
					    padding: #left;
					    addMorph: (StringMorph contents: 'Catálogo:');
					    addMorph: catalogList;
					    addMorph: addToCartButton.! !
!StoreWindow methodsFor: 'as yet unclassified' stamp: 'ar 7/9/2019 20:58:15' prior: 50792490!
buildCatalogColumn
	|addToCartButton|
	catalogList _ 
		PluggableListMorph model: self model
								listGetter: #catalog
								indexGetter: #catalogIndex
								indexSetter: #catalogIndex:.
	
	addToCartButton _ 
		PluggableButtonMorph model: self model
									stateGetter: nil
									action: #addToCartList
									label: 'Agregar al carrito'.
	
	^ (LayoutMorph newColumn)
					    separation: 15;
					    padding: #left;
					    addMorph: (StringMorph contents: 'Catálogo:');
					    addMorph: catalogList;
					    addMorph: addToCartButton.! !
!CreateCartWindowModel methodsFor: 'catalog' stamp: 'ar 7/9/2019 20:58:33'!
catalog
	^listableCatalog .! !

CreateCartWindowModel removeSelector: #listableCatalog!

!classDefinition: #CreateCartWindowModel category: #'TusLibros-Web'!
Object subclass: #CreateCartWindowModel
	instanceVariableNames: 'username password webClient cartId catalog catalogIndex cartContents cartContentsIndex listableCatalog catalogAsDict'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros-Web'!
!CreateCartWindowModel methodsFor: 'catalog' stamp: 'ar 7/9/2019 20:58:54' prior: 50792449!
sendCatalogRequest
	catalogAsDict _ webClient catalog.
	catalog _ catalogAsDict keysAndValuesDo: [ :titulo :valor | catalog add: titulo, '  $', valor asString].
	
	self triggerEvent: #catalogArrived.! !

CreateCartWindow open.!
!CreateCartWindowModel methodsFor: 'catalog' stamp: 'ar 7/9/2019 20:59:32' prior: 50792531!
catalog
	^catalog .! !

CreateCartWindow open.!
!CreateCartWindowModel methodsFor: 'catalog' stamp: 'ar 7/9/2019 21:00:36' prior: 50792557!
catalog
	^catalog.! !

CreateCartWindow open.!
!CreateCartWindowModel methodsFor: 'catalog' stamp: 'ar 7/9/2019 21:01:47' prior: 50792547!
sendCatalogRequest
	catalogAsDict _ webClient catalog.
	catalog _ catalogAsDict keysAndValuesDo: [ :titulo :valor | catalog add: titulo, '  $', valor asString].
	self halt.
	self triggerEvent: #catalogArrived.! !

CreateCartWindow open.!
!CreateCartWindowModel methodsFor: 'catalog' stamp: 'ar 7/9/2019 21:02:17' prior: 50792567!
sendCatalogRequest
	catalogAsDict _ webClient catalog.
	catalog _ OrderedCollection new.
	catalog _ catalogAsDict keysAndValuesDo: [ :titulo :valor | catalog add: titulo, '  $', valor asString].
	self halt.
	self triggerEvent: #catalogArrived.! !
!CreateCartWindowModel methodsFor: 'catalog' stamp: 'ar 7/9/2019 21:02:20' prior: 50792578!
sendCatalogRequest
	catalogAsDict _ webClient catalog.
	catalog _ OrderedCollection new.
	catalog _ catalogAsDict keysAndValuesDo: [ :titulo :valor | catalog add: titulo, '  $', valor asString].
	self triggerEvent: #catalogArrived.! !
!CreateCartWindowModel methodsFor: 'accessing' stamp: 'ar 7/9/2019 21:02:40' prior: 50791159!
initialize
	webClient _ TusLibrosWebClient new.
	username _ ''.
	password _ ''.
	catalogIndex _ 0.
	cartContents _ OrderedCollection new.
	cartContentsIndex _ 0.! !

CreateCartWindow open.!
!CreateCartWindowModel methodsFor: 'catalog' stamp: 'ar 7/9/2019 21:03:09' prior: 50792589!
sendCatalogRequest
	catalogAsDict _ webClient catalog.
	catalog _ OrderedCollection new.
	catalog _ catalogAsDict keysAndValuesDo: [ :titulo :valor | catalog add: titulo, '  $', valor asString].
	self halt.
	self triggerEvent: #catalogArrived.! !

CreateCartWindow open.!
!CreateCartWindowModel methodsFor: 'catalog' stamp: 'ar 7/9/2019 21:03:40' prior: 50792609!
sendCatalogRequest
	catalogAsDict _ webClient catalog.
	catalog _ OrderedCollection new.
	catalogAsDict keysAndValuesDo: [ :titulo :valor | catalog add: titulo, '  $', valor asString].
	self halt.
	self triggerEvent: #catalogArrived.! !
!CreateCartWindowModel methodsFor: 'catalog' stamp: 'ar 7/9/2019 21:03:43' prior: 50792621!
sendCatalogRequest
	catalogAsDict _ webClient catalog.
	catalog _ OrderedCollection new.
	catalogAsDict keysAndValuesDo: [ :titulo :valor | catalog add: titulo, '  $', valor asString].
	self triggerEvent: #catalogArrived.! !

CreateCartWindow open.!

CreateCartWindow open.!
!CreateCartWindowModel methodsFor: 'catalog' stamp: 'ar 7/9/2019 21:04:22' prior: 50792562!
catalog
	^catalogAsDict keysAndValuesDo: [ :titulo :valor | catalog add: titulo, '  $', valor asString].! !

CreateCartWindow open.!

CreateCartWindow open.!
!CreateCartWindowModel methodsFor: 'catalog' stamp: 'ar 7/9/2019 21:05:31' prior: 50792644!
catalog
	|catalogAsList|
	catalogAsList _ OrderedCollection new.
	catalogAsDict keysAndValuesDo: [ :titulo :valor | catalogAsList add: titulo, '  $', valor asString].
	^catalogAsList ! !
!CreateCartWindowModel methodsFor: 'catalog' stamp: 'ar 7/9/2019 21:05:33' prior: 50792652!
catalog
	|catalogAsList|
	catalogAsList _ OrderedCollection new.
	catalogAsDict keysAndValuesDo: [ :titulo :valor | catalogAsList add: titulo, '  $', valor asString].
	^catalogAsList.! !

CreateCartWindow open.!
!CreateCartWindowModel methodsFor: 'catalog' stamp: 'ar 7/9/2019 21:05:46' prior: 50792661!
catalog
	^catalog! !

CreateCartWindow open.!

----SNAPSHOT----(9 July 2019 21:06:39) TusLibros-Web.image priorSource: 14744162!

----STARTUP---- (9 July 2019 22:34:18) as /home/teofr/Documents/IngBkp/Ing1-2019/32.3-TusLibros.com-Final/linux64/TusLibros-Web.image!


TusLibrosServerController allInstances do: [:in | in stopListening; destroy ].!

TusLibrosServerController allInstances do: [:in | in port].!

TusLibrosServerController allInstances do: [:in | ^in port].!

CreateCartWindow open.!

testObjectsFactory _ TusLibrosWebTestObjectFactory new.!

aSystemFacade _ testObjectsFactory tusLibrosSystemFacade. !

aDefaultServerController _ TusLibrosServerController listeningOn: 8080 withFacade: aSystemFacade.!

CreateCartWindow open.!
!TusLibrosServerControllerTest methodsFor: 'test - port' stamp: 'tf 7/9/2019 22:40:44' prior: 50789747!
test02PuedoCrearUnaInstanciaDelServidorQueEscucheEnUnPuertoEspecifico
	| aServerController |
	
	aServerController _ TusLibrosServerController listeningOn: 8888 withFacade: aSystemFacade.
	self assert: (aServerController port = 8888).
	
	aServerController stopListening ; destroy .! !

TusLibrosServerController allInstances do: [:in | ^in stopListening ; destroy].!

TusLibrosServerController allInstances do: [:in | in stopListening ; destroy].!

testObjectsFactory _ TusLibrosWebTestObjectFactory new.!

aSystemFacade _ testObjectsFactory tusLibrosSystemFacade. !

aDefaultServerController _ TusLibrosServerController listeningOn: 8080 withFacade: aSystemFacade.!

aDefaultServerController stopListening ; destroy.!

aDefaultServerController stopListening ; destroy.!
!TusLibrosWebTestObjectFactory methodsFor: 'as yet unclassified' stamp: 'tf 7/9/2019 22:43:24' prior: 50790786!
tusLibrosSystemFacade
	
	^TusLibrosSystemFacade
		authenticatingWith: self validUsersAndPasswords 
		acceptingItemsOf:  storeTestObjectsFactory defaultCatalog
		registeringOn: self createSalesBook 
		debitingThrought: self
		measuringTimeWith: DateAndTime
! !
!TusLibrosWebTestObjectFactory methodsFor: 'nil' stamp: 'tf 7/9/2019 22:43:32'!
initialize
	storeTestObjectsFactory _ StoreTestObjectsFactory new.! !
!TusLibrosWebClientTest methodsFor: 'as yet unclassified' stamp: 'tf 7/9/2019 22:45:11'!
test09
	||
	

		
	onHtmlSubmitBlock _ [:url :fields | 
		self assert: url equals: 'http://tusLibros.com:8484/catalog'.
		(WebResponse protocol: 'http' code: 404) content: (WebUtils jsonEncode: 'Error!!!!') 
	].

	self should: [defaultWebClient catalog ]
		raise: Error - MessageNotUnderstood 
		withMessageText: 'Error!!!!'.
! !
!TusLibrosWebClientTest methodsFor: 'as yet unclassified' stamp: 'tf 7/9/2019 22:45:16' prior: 50792742!
test09
		
	onHtmlSubmitBlock _ [:url :fields | 
		self assert: url equals: 'http://tusLibros.com:8484/catalog'.
		(WebResponse protocol: 'http' code: 404) content: (WebUtils jsonEncode: 'Error!!!!') 
	].

	self should: [defaultWebClient catalog ]
		raise: Error - MessageNotUnderstood 
		withMessageText: 'Error!!!!'.
! !
!TusLibrosWebClientTest methodsFor: 'as yet unclassified' stamp: 'tf 7/9/2019 22:45:35' prior: 50792756!
test09
		
	onHtmlSubmitBlock _ [:url :fields | 
		self assert: url equals: 'http://tusLibros.com:8484/catalog'.
		(WebResponse protocol: 'http' code: 404) content: 'Error!!!!' 
	].

	self should: [defaultWebClient catalog ]
		raise: Error - MessageNotUnderstood 
		withMessageText: 'Error!!!!'.
! !
!TusLibrosWebClient methodsFor: 'nil' stamp: 'tf 7/9/2019 22:48:13'!
add: anAmount of: aBook toCartIdentifiedAs: aCartId! !
!TusLibrosWebClient methodsFor: 'as yet unclassified' stamp: 'tf 7/9/2019 22:48:22'!
checkOutCartIdentifiedAs: aCartId withCreditCardNumbered: aCreditCartNumber ownedBy: anOwner expiringOn: anExpirationMonthOfYear! !
!TusLibrosWebClient methodsFor: 'as yet unclassified' stamp: 'tf 7/9/2019 22:48:45'!
listPurchasesOf: aUser authenticatingWith: aPassword! !
!TusLibrosWebClientTest methodsFor: 'as yet unclassified' stamp: 'tf 7/9/2019 22:50:00'!
test10PuedoAgregarCosasAUnCarrito
	| catalogResponse catalog|
	
	catalog _ Dictionary newFromPairs: {'book1' . 23 . 'book2' . 300 . 'book3'. 1000}.
		
	onHtmlSubmitBlock _ [:url :fields | 
		self assert: url equals: 'http://tusLibros.com:8484/addtocart'.
		(WebResponse protocol: 'http' code: 200) content: (WebUtils jsonEncode: 0) 
	].

	catalogResponse _ defaultWebClient catalog.
	
	self assert: catalogResponse equals: catalog.
! !
!TusLibrosWebClientTest methodsFor: 'as yet unclassified' stamp: 'tf 7/9/2019 22:51:48' prior: 50792799!
test10PuedoAgregarCosasAUnCarrito
	| addToCartResponse|
		
	onHtmlSubmitBlock _ [:url :fields | 
		self assert: url equals: 'http://tusLibros.com:8484/addtocart'.
		self assert: (fields at: 'cartId') equals: 23.
		self assert: (fields at: 'bookISBN') equals: 'validBook'.
		self assert: (fields at: 'bookQuantity') equals: 3.
		(WebResponse protocol: 'http' code: 200) content: (WebUtils jsonEncode: 0) 
	].

	addToCartResponse _ defaultWebClient add: 3 of: 'validBook' toCartIdentifiedAs: 23 .
	
	self assert: addToCartResponse equals: 0.
! !
!TusLibrosWebClient methodsFor: 'as yet unclassified' stamp: 'tf 7/9/2019 22:53:45' prior: 50792782!
add: anAmount of: aBook toCartIdentifiedAs: aCartId
	| queryParams response |

	queryParams _ Dictionary new 
			at: 'cartId' put: anAmount; 
			at: 'bookISBN' put: aBook; 
			at: 'cartId' put: aCartId ; 
			yourself .
	response _ webClient htmlSubmit: (self url, TusLibrosServerController addToCartEndpoint ) fields: queryParams. 
	
	response isSuccess
		ifTrue: [
				^WebUtils jsonDecode: response content readStream .
			]
		ifFalse: [
				self error: response content .
			].! !
!TusLibrosWebClient methodsFor: 'as yet unclassified' stamp: 'tf 7/9/2019 22:54:05' prior: 50792837!
add: anAmount of: aBook toCartIdentifiedAs: aCartId
	| queryParams response |

	queryParams _ Dictionary new 
			at: 'bookQuantity' put: anAmount; 
			at: 'bookISBN' put: aBook; 
			at: 'cartId' put: aCartId ; 
			yourself .
	response _ webClient htmlSubmit: (self url, TusLibrosServerController addToCartEndpoint ) fields: queryParams. 
	
	response isSuccess
		ifTrue: [
				^WebUtils jsonDecode: response content readStream .
			]
		ifFalse: [
				self error: response content .
			].! !
!TusLibrosWebClientTest methodsFor: 'as yet unclassified' stamp: 'tf 7/9/2019 22:55:19'!
test11SiElServerDaUnErrorAlAgregarCosasAUnCarritoLevantoUnaExcepcion
	| addToCartResponse|
		
	onHtmlSubmitBlock _ [:url :fields | 
		self assert: url equals: 'http://tusLibros.com:8484/addtocart'.
		self assert: (fields at: 'cartId') equals: 23.
		self assert: (fields at: 'bookISBN') equals: 'validBook'.
		self assert: (fields at: 'bookQuantity') equals: 3.
		(WebResponse protocol: 'http' code: 404) content: 'Error!!'.
	].

	self should: [defaultWebClient add: 3 of: 'validBook' toCartIdentifiedAs: 23] 
		raise: Error - MessageNotUnderstood 
		withMessageText: 'Error!!'.

	

! !
!TusLibrosWebClientTest methodsFor: 'as yet unclassified' stamp: 'tf 7/9/2019 22:58:04'!
test12PuedoHacerCheckoutDeUnCarrito
	| checkoutResponse|
		
	onHtmlSubmitBlock _ [:url :fields | 
		self assert: url equals: 'http://tusLibros.com:8484/addtocart'.
		self assert: (fields at: 'cartId') equals: 23.
		self assert: (fields at: 'creditCardNumber') equals: '0000111122223333'.
		self assert: (fields at: 'ownersName') equals: 'Teo'.
		self assert: (fields at: 'expirationDate') equals: July/2020.
		(WebResponse protocol: 'http' code: 200) content: (WebUtils jsonEncode: 0) 
	].

	checkoutResponse _ defaultWebClient 
		checkOutCartIdentifiedAs: 23 
		withCreditCardNumbered: '0000111122223333' 
		ownedBy: 'Teo' 
		expiringOn: July/2020 .
	
	self assert: checkoutResponse equals: 0.
! !
!TusLibrosWebClientTest methodsFor: 'as yet unclassified' stamp: 'tf 7/9/2019 22:58:55' prior: 50792897!
test12PuedoHacerCheckoutDeUnCarrito
	| checkoutResponse|
		
	onHtmlSubmitBlock _ [:url :fields | 
		self assert: url equals: 'http://tusLibros.com:8484/addtocart'.
		self assert: (fields at: 'cartId') equals: 23.
		self assert: (fields at: 'creditCardNumber') equals: '0000111122223333'.
		self assert: (fields at: 'ownersName') equals: 'Teo'.
		self assert: (fields at: 'expirationDate') equals: (Month month: July year: 2020).
		(WebResponse protocol: 'http' code: 200) content: (WebUtils jsonEncode: 0) 
	].

	checkoutResponse _ defaultWebClient 
		checkOutCartIdentifiedAs: 23 
		withCreditCardNumbered: '0000111122223333' 
		ownedBy: 'Teo' 
		expiringOn: (Month month: July year: 2020) .
	
	self assert: checkoutResponse equals: 0.
! !
!TusLibrosWebClientTest methodsFor: 'as yet unclassified' stamp: 'tf 7/9/2019 22:59:27' prior: 50792923!
test12PuedoHacerCheckoutDeUnCarrito
	| checkoutResponse|
		
	onHtmlSubmitBlock _ [:url :fields | 
		self assert: url equals: 'http://tusLibros.com:8484/addtocart'.
		self assert: (fields at: 'cartId') equals: 23.
		self assert: (fields at: 'creditCardNumber') equals: '0000111122223333'.
		self assert: (fields at: 'ownersName') equals: 'Teo'.
		self assert: (fields at: 'expirationDate') equals: (Month month: 07 year: 2020).
		(WebResponse protocol: 'http' code: 200) content: (WebUtils jsonEncode: 0) 
	].

	checkoutResponse _ defaultWebClient 
		checkOutCartIdentifiedAs: 23 
		withCreditCardNumbered: '0000111122223333' 
		ownedBy: 'Teo' 
		expiringOn: (Month month: 07 year: 2020) .
	
	self assert: checkoutResponse equals: 0.
! !
!TusLibrosWebClient methodsFor: 'as yet unclassified' stamp: 'tf 7/9/2019 23:03:22' prior: 50792787!
checkOutCartIdentifiedAs: aCartId 
withCreditCardNumbered: aCreditCartNumber 
ownedBy: anOwner 
expiringOn: anExpirationMonthOfYear
	| queryParams response |

	queryParams _ Dictionary new 
			at: 'cartId' put: aCartId printString ; 
			at: 'creditCardNumber' put: aCreditCartNumber ;
			at:  'ownersName' put: anOwner ; 
			at: 'expirationDate' put: (anExpirationMonthOfYear copyReplaceAll: ' ' with: '%20') ;
			yourself .
	response _ webClient 
		htmlSubmit: (self url, TusLibrosServerController checkoutCartEndpoint ) fields: queryParams. 
	
	response isSuccess
		ifTrue: [
				^WebUtils jsonDecode: response content readStream .
			]
		ifFalse: [
				self error: response content .
			].! !
!TusLibrosWebClient methodsFor: 'as yet unclassified' stamp: 'tf 7/9/2019 23:03:40' prior: 50792977!
checkOutCartIdentifiedAs: aCartId 
withCreditCardNumbered: aCreditCartNumber 
ownedBy: anOwner 
expiringOn: anExpirationMonthOfYear
	| queryParams response |

	queryParams _ Dictionary new 
			at: 'cartId' put: aCartId printString ; 
			at: 'creditCardNumber' put: aCreditCartNumber ;
			at:  'ownersName' put: anOwner ; 
			at: 'expirationDate' put: (anExpirationMonthOfYear printString copyReplaceAll: ' ' with: '%20') ;
			yourself .
	response _ webClient 
		htmlSubmit: (self url, TusLibrosServerController checkoutCartEndpoint ) fields: queryParams. 
	
	response isSuccess
		ifTrue: [
				^WebUtils jsonDecode: response content readStream .
			]
		ifFalse: [
				self error: response content .
			].! !
!TusLibrosWebClientTest methodsFor: 'as yet unclassified' stamp: 'tf 7/9/2019 23:04:31' prior: 50792950!
test12PuedoHacerCheckoutDeUnCarrito
	| checkoutResponse|
		
	onHtmlSubmitBlock _ [:url :fields | 
		self assert: url equals: 'http://tusLibros.com:8484/checkoutcart'.
		self assert: (fields at: 'cartId') equals: 23 printString .
		self assert: (fields at: 'creditCardNumber') equals: '0000111122223333'.
		self assert: (fields at: 'ownersName') equals: 'Teo'.
		self assert: (fields at: 'expirationDate') 
			equals: ((Month month: 07 year: 2020) printString copyReplaceAll: ' ' with: '%20') .
		(WebResponse protocol: 'http' code: 200) content: (WebUtils jsonEncode: 0) 
	].

	checkoutResponse _ defaultWebClient 
		checkOutCartIdentifiedAs: 23 
		withCreditCardNumbered: '0000111122223333' 
		ownedBy: 'Teo' 
		expiringOn: (Month month: 07 year: 2020) .
	
	self assert: checkoutResponse equals: 0.
! !
!TusLibrosWebClientTest methodsFor: 'as yet unclassified' stamp: 'tf 7/9/2019 23:04:41' prior: 50793028!
test12PuedoHacerCheckoutDeUnCarrito
	| checkoutResponse|
		
	onHtmlSubmitBlock _ [:url :fields | 
		self assert: url equals: 'http://tusLibros.com:8484/checkoutcart'.
		self assert: (fields at: 'cartId') equals: 23 printString .
		self assert: (fields at: 'creditCardNumber') equals: '0000111122223333'.
		self assert: (fields at: 'ownersName') equals: 'Teo'.
		self assert: (fields at: 'expirationDate') 
			equals: ((Month month: 07 year: 2020) printString copyReplaceAll: ' ' with: '%20') .
			
		(WebResponse protocol: 'http' code: 200) content: (WebUtils jsonEncode: 0) 
	].

	checkoutResponse _ defaultWebClient 
		checkOutCartIdentifiedAs: 23 
		withCreditCardNumbered: '0000111122223333' 
		ownedBy: 'Teo' 
		expiringOn: (Month month: 07 year: 2020) .
	
	self assert: checkoutResponse equals: 0.
! !
!TusLibrosWebClientTest methodsFor: 'as yet unclassified' stamp: 'tf 7/9/2019 23:05:45' prior: 50792875!
test11SiElServerDaUnErrorAlAgregarCosasAUnCarritoLevantoUnaExcepcion
	||
		
	onHtmlSubmitBlock _ [:url :fields | 
		(WebResponse protocol: 'http' code: 404) content: 'Error!!'.
	].

	self should: [defaultWebClient add: 3 of: 'validBook' toCartIdentifiedAs: 23] 
		raise: Error - MessageNotUnderstood 
		withMessageText: 'Error!!'.

	

! !
!TusLibrosWebClientTest methodsFor: 'as yet unclassified' stamp: 'tf 7/9/2019 23:05:51' prior: 50793086!
test11SiElServerDaUnErrorAlAgregarCosasAUnCarritoLevantoUnaExcepcion

		
	onHtmlSubmitBlock _ [:url :fields | 
		(WebResponse protocol: 'http' code: 404) content: 'Error!!'.
	].

	self should: [defaultWebClient add: 3 of: 'validBook' toCartIdentifiedAs: 23] 
		raise: Error - MessageNotUnderstood 
		withMessageText: 'Error!!'.

	

! !
!TusLibrosWebClientTest methodsFor: 'as yet unclassified' stamp: 'tf 7/9/2019 23:06:15' prior: 50792816!
test10PuedoAgregarCosasAUnCarrito
	| addToCartResponse|
		
	onHtmlSubmitBlock _ [:url :fields | 
		self assert: url equals: 'http://tusLibros.com:8484/addtocart'.
		self assert: (fields at: 'cartId') equals: 23 printString .
		self assert: (fields at: 'bookISBN') equals: 'validBook'.
		self assert: (fields at: 'bookQuantity') equals: 3 printString .
		(WebResponse protocol: 'http' code: 200) content: (WebUtils jsonEncode: 0) 
	].

	addToCartResponse _ defaultWebClient add: 3 of: 'validBook' toCartIdentifiedAs: 23 .
	
	self assert: addToCartResponse equals: 0.
! !
!TusLibrosWebClientTest methodsFor: 'as yet unclassified' stamp: 'tf 7/9/2019 23:06:31' prior: 50792770!
test09
		
	onHtmlSubmitBlock _ [:url :fields | 
		(WebResponse protocol: 'http' code: 404) content: 'Error!!!!' 
	].

	self should: [defaultWebClient catalog ]
		raise: Error - MessageNotUnderstood 
		withMessageText: 'Error!!!!'.
! !
!TusLibrosWebClientTest methodsFor: 'test - createcart' stamp: 'tf 7/9/2019 23:06:53' prior: 50790349!
test07SiElRequestAlServidorDeCrearUnCarritoDaErrorElWebClientLevantaUnaExcepcion
		
	onHtmlSubmitBlock _ [:url :fields | 
		^(WebResponse protocol: 'http' code: 404) content: 'Error!!'; yourself. 
	].

	self should: [defaultWebClient createCartFor: testObjectFactory validUser authenticatedWith: testObjectFactory validUserPassword ]
		 raise:  Error - MessageNotUnderstood 
		withMessageText: 'Error!!'.
	
! !
!TusLibrosWebClient methodsFor: 'server requests' stamp: 'tf 7/9/2019 23:07:36' prior: 50792856!
add: anAmount of: aBook toCartIdentifiedAs: aCartId
	| queryParams response |

	queryParams _ Dictionary new 
			at: 'bookQuantity' put: anAmount printString ; 
			at: 'bookISBN' put: aBook; 
			at: 'cartId' put: aCartId printString ; 
			yourself .
	response _ webClient htmlSubmit: (self url, TusLibrosServerController addToCartEndpoint ) fields: queryParams. 
	
	response isSuccess
		ifTrue: [
				^WebUtils jsonDecode: response content readStream .
			]
		ifFalse: [
				self error: response content .
			].! !
!TusLibrosWebClientTest methodsFor: 'as yet unclassified' stamp: 'tf 7/9/2019 23:08:13'!
test13LevantaUnaExcepcionAlRecibirUnErrorDelServer
	| checkoutResponse|
		
	onHtmlSubmitBlock _ [:url :fields | 
		self assert: url equals: 'http://tusLibros.com:8484/checkoutcart'.
		self assert: (fields at: 'cartId') equals: 23 printString .
		self assert: (fields at: 'creditCardNumber') equals: '0000111122223333'.
		self assert: (fields at: 'ownersName') equals: 'Teo'.
		self assert: (fields at: 'expirationDate') 
			equals: ((Month month: 07 year: 2020) printString copyReplaceAll: ' ' with: '%20') .
			
		(WebResponse protocol: 'http' code: 200) content: (WebUtils jsonEncode: 0) 
	].

	checkoutResponse _ defaultWebClient 
		checkOutCartIdentifiedAs: 23 
		withCreditCardNumbered: '0000111122223333' 
		ownedBy: 'Teo' 
		expiringOn: (Month month: 07 year: 2020) .
	
	self assert: checkoutResponse equals: 0.
! !
!TusLibrosWebClientTest methodsFor: 'as yet unclassified' stamp: 'tf 7/9/2019 23:08:32' prior: 50793182!
test13LevantaUnaExcepcionAlRecibirUnErrorDelServer
	| checkoutResponse|
		
	onHtmlSubmitBlock _ [:url :fields | 
		(WebResponse protocol: 'http' code: 404) content: 'Error'. 
	].

	checkoutResponse _ defaultWebClient 
		checkOutCartIdentifiedAs: 23 
		withCreditCardNumbered: '0000111122223333' 
		ownedBy: 'Teo' 
		expiringOn: (Month month: 07 year: 2020) .
	
	self assert: checkoutResponse equals: 0.
! !
!TusLibrosWebClientTest methodsFor: 'as yet unclassified' stamp: 'tf 7/9/2019 23:09:24' prior: 50793211!
test13LevantaUnaExcepcionAlRecibirUnErrorDelServer
	||
		
	onHtmlSubmitBlock _ [:url :fields | 
		(WebResponse protocol: 'http' code: 404) content: 'Error'. 
	].

	self should: [
			defaultWebClient 
				checkOutCartIdentifiedAs: 23 
				withCreditCardNumbered: '0000111122223333' 
				ownedBy: 'Teo' 
				expiringOn: (Month month: 07 year: 2020) .]
		 raise: Error -  MessageNotUnderstood 
		 withMessageText: 'Error'.
	! !
!TusLibrosWebClientTest methodsFor: 'as yet unclassified' stamp: 'tf 7/9/2019 23:09:29' prior: 50793227!
test13LevantaUnaExcepcionAlRecibirUnErrorDelServer
		
	onHtmlSubmitBlock _ [:url :fields | 
		(WebResponse protocol: 'http' code: 404) content: 'Error'. 
	].

	self should: [
			defaultWebClient 
				checkOutCartIdentifiedAs: 23 
				withCreditCardNumbered: '0000111122223333' 
				ownedBy: 'Teo' 
				expiringOn: (Month month: 07 year: 2020) .]
		 raise: Error -  MessageNotUnderstood 
		 withMessageText: 'Error'.
	! !

----SNAPSHOT----(9 July 2019 23:09:43) TusLibros-Web.image priorSource: 14752781!
!TusLibrosWebClientTest methodsFor: 'as yet unclassified' stamp: 'tf 7/9/2019 23:11:38'!
test14PuedoListarLasComprasDeUnUsuario
	| checkoutResponse|
		
	onHtmlSubmitBlock _ [:url :fields | 
		self assert: url equals: 'http://tusLibros.com:8484/checkoutcart'.
		self assert: (fields at: 'username') equals: 'Teo' .
		self assert: (fields at: 'password') equals: 'freund'.



			
		(WebResponse protocol: 'http' code: 200) content: (WebUtils jsonEncode: '123') 
	].

	checkoutResponse _ defaultWebClient listPurchasesOf: 'Teo' authenticatingWith: 'freund'. 
	
	self assert: checkoutResponse equals: '123'.
! !
!TusLibrosWebClientTest methodsFor: 'as yet unclassified' stamp: 'tf 7/9/2019 23:11:45' prior: 50793263!
test14PuedoListarLasComprasDeUnUsuario
	| listPurchaseResponse|
		
	onHtmlSubmitBlock _ [:url :fields | 
		self assert: url equals: 'http://tusLibros.com:8484/checkoutcart'.
		self assert: (fields at: 'username') equals: 'Teo' .
		self assert: (fields at: 'password') equals: 'freund'.



			
		(WebResponse protocol: 'http' code: 200) content: (WebUtils jsonEncode: '123') 
	].

	listPurchaseResponse _ defaultWebClient listPurchasesOf: 'Teo' authenticatingWith: 'freund'. 
	
	self assert: listPurchaseResponse equals: '123'.
! !
!TusLibrosWebClient methodsFor: 'as yet unclassified' stamp: 'tf 7/9/2019 23:12:31' prior: 50792794!
listPurchasesOf: aUser authenticatingWith: aPassword
	| queryParams response |

	queryParams _ Dictionary new 
			at: 'usernam' put: aUser ; 
			at: 'password' put: aPassword ;
			yourself .
			
	response _ webClient 
		htmlSubmit: (self url, TusLibrosServerController listPurchasesEndpoint ) fields: queryParams. 
	
	response isSuccess
		ifTrue: [
				^WebUtils jsonDecode: response content readStream .
			]
		ifFalse: [
				self error: response content .
			].! !
!TusLibrosWebClientTest methodsFor: 'as yet unclassified' stamp: 'tf 7/9/2019 23:12:56' prior: 50793283!
test14PuedoListarLasComprasDeUnUsuario
	| listPurchaseResponse|
		
	onHtmlSubmitBlock _ [:url :fields | 
		self assert: url equals: 'http://tusLibros.com:8484/listpurchases'.
		self assert: (fields at: 'username') equals: 'Teo' .
		self assert: (fields at: 'password') equals: 'freund'.



			
		(WebResponse protocol: 'http' code: 200) content: (WebUtils jsonEncode: '123') 
	].

	listPurchaseResponse _ defaultWebClient listPurchasesOf: 'Teo' authenticatingWith: 'freund'. 
	
	self assert: listPurchaseResponse equals: '123'.
! !
!TusLibrosWebClient methodsFor: 'as yet unclassified' stamp: 'tf 7/9/2019 23:13:09' prior: 50793303!
listPurchasesOf: aUser authenticatingWith: aPassword
	| queryParams response |

	queryParams _ Dictionary new 
			at: 'username' put: aUser ; 
			at: 'password' put: aPassword ;
			yourself .
			
	response _ webClient 
		htmlSubmit: (self url, TusLibrosServerController listPurchasesEndpoint ) fields: queryParams. 
	
	response isSuccess
		ifTrue: [
				^WebUtils jsonDecode: response content readStream .
			]
		ifFalse: [
				self error: response content .
			].! !
!TusLibrosWebClientTest methodsFor: 'as yet unclassified' stamp: 'tf 7/9/2019 23:14:44'!
test15PuedoListarLasComprasDeUnUsuario
	| listPurchaseResponse|
		
	onHtmlSubmitBlock _ [:url :fields | 
		(WebResponse protocol: 'http' code: 404) content: 'Error' 
	].

	listPurchaseResponse _ defaultWebClient listPurchasesOf: 'Teo' authenticatingWith: 'freund'. 
	
	self assert: listPurchaseResponse equals: '123'.
! !
!TusLibrosWebClientTest methodsFor: 'as yet unclassified' stamp: 'tf 7/9/2019 23:15:14' prior: 50793359!
test15PuedoListarLasComprasDeUnUsuario
	||
		
	onHtmlSubmitBlock _ [:url :fields | 
		(WebResponse protocol: 'http' code: 404) content: 'Error' 
	].

	self should: [defaultWebClient listPurchasesOf: 'Teo' authenticatingWith: 'freund'] 
		raise: Error - MessageNotUnderstood  
		withMessageText: 'Error'. 
	! !
!TusLibrosWebClientTest methodsFor: 'as yet unclassified' stamp: 'tf 7/9/2019 23:15:19' prior: 50793373!
test15PuedoListarLasComprasDeUnUsuario
		
	onHtmlSubmitBlock _ [:url :fields | 
		(WebResponse protocol: 'http' code: 404) content: 'Error' 
	].

	self should: [defaultWebClient listPurchasesOf: 'Teo' authenticatingWith: 'freund'] 
		raise: Error - MessageNotUnderstood  
		withMessageText: 'Error'. 
	! !

----SNAPSHOT----(9 July 2019 23:15:56) TusLibros-Web.image priorSource: 14771492!

----QUIT----(9 July 2019 23:16:05) TusLibros-Web.image priorSource: 14775921!

----STARTUP---- (10 July 2019 11:45:50) as /home/teofr/Documents/IngBkp/Ing1-2019/32.3-TusLibros.com-Final/linux64/TusLibros-Web.image!


TusLibrosServerController allInstances do: [:in | in stopListening ; destroy].!

----SNAPSHOT----(10 July 2019 11:47:43) TusLibros-Web.image priorSource: 14776004!
!TusLibrosServerControllerTest methodsFor: 'setUp/tearDown' stamp: 'tf 7/10/2019 11:47:57' prior: 50789814!
tearDown
	self halt.
	aDefaultServerController stopListening .
	aDefaultServerController destroy .! !
!TusLibrosServerControllerTest methodsFor: 'setUp/tearDown' stamp: 'tf 7/10/2019 11:48:15' prior: 50793414!
tearDown

	aDefaultServerController stopListening .
	aDefaultServerController destroy .! !
!TusLibrosServerControllerTest methodsFor: 'test - port' stamp: 'tf 7/10/2019 11:51:51' prior: 50792698!
test02PuedoCrearUnaInstanciaDelServidorQueEscucheEnUnPuertoEspecifico
	| aServerController |
	
	aServerController _ TusLibrosServerController listeningOn: 8888 withFacade: aSystemFacade.
	self assert: (aServerController port = 8888).
	self halt.
	
	aServerController stopListening ; destroy .! !
!TusLibrosServerControllerTest methodsFor: 'test - port' stamp: 'tf 7/10/2019 11:52:43' prior: 50793428!
test02PuedoCrearUnaInstanciaDelServidorQueEscucheEnUnPuertoEspecifico
	| aServerController |
	
	aServerController _ TusLibrosServerController listeningOn: 8888 withFacade: aSystemFacade.
	self assert: (aServerController port = 8888).

	
	aServerController stopListening ; destroy .! !

----STARTUP---- (10 July 2019 11:54:58) as /home/teofr/Documents/IngBkp/Ing1-2019/32.3-TusLibros.com-Final/linux64/TusLibros-Web.image!


TusLibrosServerController allInstances do: [:in | in stopListening ; destroy].!

[self halt] ensure: [^2].!

[self halt] ensure: [^2].!

[self halt] ensure: [^2]. !

[self halt] ensure: [^2].!
!TusLibrosServerControllerTest methodsFor: 'test - port' stamp: 'tf 7/10/2019 12:07:01' prior: 50789758!
test03ElServerNoPuedeEscucharEnUnPuertoNegativo
	self halt.
	self should: [TusLibrosServerController listeningOn: -1 withFacade: aSystemFacade ]
		 raise: Error - MessageNotUnderstood 
		 withExceptionDo: [:anError |
			self assert: anError messageText equals: TusLibrosServerController invalidPortNumberMessageError	
		].! !
!TusLibrosServerControllerTest methodsFor: 'test - port' stamp: 'tf 7/10/2019 12:07:19' prior: 50793464!
test03ElServerNoPuedeEscucharEnUnPuertoNegativo

	self should: [TusLibrosServerController listeningOn: -1 withFacade: aSystemFacade ]
		 raise: Error - MessageNotUnderstood 
		 withExceptionDo: [:anError |
			self assert: anError messageText equals: TusLibrosServerController invalidPortNumberMessageError	
		].! !

----SNAPSHOT----(10 July 2019 12:08:05) TusLibros-Web.image priorSource: 14776302!

----STARTUP---- (10 July 2019 12:08:23) as /home/teofr/Documents/IngBkp/Ing1-2019/32.3-TusLibros.com-Final/linux64/TusLibros-Web.image!


TusLibrosServerController allInstances do: [:in | in stopListening ; destroy].!

----SNAPSHOT----(10 July 2019 12:08:41) TusLibros-Web.image priorSource: 14776302!

----SNAPSHOT----(10 July 2019 12:08:52) TusLibros-Web.image priorSource: 14779177!
!TusLibrosServerControllerTest methodsFor: 'test - add items' stamp: 'tf 7/10/2019 12:09:51' prior: 50789872!
test10ReciboUnaRespuesta200AlAgregarItemsAlCarrito
	| cartId queryParams cartCreationResponse addToCartResponse|
	
	queryParams _ Dictionary newFromPairs: {'username' . testObjectsFactory validUser . 'password' . testObjectsFactory validUserPassword }.
	
	cartCreationResponse _ WebClient htmlSubmit: 'http://localhost:8484/createCart' fields: queryParams.
	cartId _ WebUtils jsonDecode: cartCreationResponse content readStream.
	
	queryParams _ Dictionary newFromPairs: { 'cartId' . cartId printString . 'bookISBN' . 'validBook' . 'bookQuantity' . '3' }.
	addToCartResponse  _ WebClient htmlSubmit: 'http://localhost:8484/addToCart' fields: queryParams.

	self assert: addToCartResponse isSuccess .
	self assert: addToCartResponse code = 200.! !
!TusLibrosServerControllerTest methodsFor: 'test - add items' stamp: 'tf 7/10/2019 12:10:52' prior: 50793506!
test10ReciboUnaRespuesta200AlAgregarItemsAlCarrito
	| cartId queryParams cartCreationResponse addToCartResponse|
	
	queryParams _ Dictionary newFromPairs: {
			'username' . testObjectsFactory validUser . 
			'password' . testObjectsFactory validUserPassword 
	}.
	
	cartCreationResponse _ WebClient htmlSubmit: 'http://localhost:8484/createCart' fields: queryParams.
	cartId _ WebUtils jsonDecode: cartCreationResponse content readStream.
	
	queryParams _ Dictionary newFromPairs: { 
			'cartId' . cartId printString . 
			'bookISBN' . 'validBook' . 
			'bookQuantity' . '3' 
	}.
	addToCartResponse  _ WebClient htmlSubmit: 'http://localhost:8484/addToCart' fields: queryParams.

	self assert: addToCartResponse isSuccess .
	self assert: addToCartResponse code = 200.! !
!TusLibrosServerControllerTest methodsFor: 'test - add items' stamp: 'tf 7/10/2019 12:11:05' prior: 50789066!
test11ReciboUnaRespuesta404AlAgregarItemsAUnCarritoInexistente
	| aServerController queryParams addToCartResponse cartCreationResponse cartId |
	
	aServerController _ TusLibrosServerController listeningOn: 8484 withFacade: aSystemFacade.
	
	queryParams _ Dictionary newFromPairs: {'username' . testObjectsFactory validUser . 'password' . testObjectsFactory validUserPassword }.
	
	cartCreationResponse _ WebClient htmlSubmit: 'http://localhost:8484/createCart' fields: queryParams.
	cartId _ WebUtils jsonDecode: cartCreationResponse content readStream.
	
	queryParams _ Dictionary newFromPairs: { 'cartId' . cartId printString . 'bookISBN' . 'invalidBook' . 'bookQuantity' . '3' }.
	addToCartResponse  _ WebClient htmlSubmit: 'http://localhost:8484/addToCart' fields: queryParams.
	
	self deny: addToCartResponse isSuccess .
	self assert: addToCartResponse code = 404.
	self assert: addToCartResponse content = 'Item is not in catalog'.! !
!TusLibrosServerControllerTest methodsFor: 'test - add items' stamp: 'tf 7/10/2019 12:11:38' prior: 50793561!
test11ReciboUnaRespuesta404AlAgregarItemsAUnCarritoInexistente
	| queryParams addToCartResponse cartCreationResponse cartId |
	
	queryParams _ Dictionary newFromPairs: {'username' . testObjectsFactory validUser . 'password' . testObjectsFactory validUserPassword }.
	
	cartCreationResponse _ WebClient htmlSubmit: 'http://localhost:8484/createCart' fields: queryParams.
	cartId _ WebUtils jsonDecode: cartCreationResponse content readStream.
	
	queryParams _ Dictionary newFromPairs: { 'cartId' . cartId printString . 'bookISBN' . 'invalidBook' . 'bookQuantity' . '3' }.
	addToCartResponse  _ WebClient htmlSubmit: 'http://localhost:8484/addToCart' fields: queryParams.
	
	self deny: addToCartResponse isSuccess .
	self assert: addToCartResponse code = 404.
	self assert: addToCartResponse content = 'Item is not in catalog'.! !
!TusLibrosServerControllerTest methodsFor: 'test - add items' stamp: 'tf 7/10/2019 12:13:04' prior: 50793594!
test11ReciboUnaRespuesta404AlAgregarItemsAUnCarritoInexistente
	| queryParams addToCartResponse |
		
	queryParams _ Dictionary newFromPairs: { 
		'cartId' . -2 printString . 
		'bookISBN' . 'invalidBook' . 
		'bookQuantity' . '3' 
	}.
	addToCartResponse  _ WebClient htmlSubmit: 'http://localhost:8484/addToCart' fields: queryParams.
	
	self deny: addToCartResponse isSuccess .
	self assert: addToCartResponse code = 404.
	self assert: addToCartResponse content = 'Item is not in catalog'.! !
!TusLibrosServerControllerTest methodsFor: 'test - add items' stamp: 'tf 7/10/2019 12:13:35' prior: 50793624!
test11ReciboUnaRespuesta404AlAgregarItemsAUnCarritoInexistente
	| queryParams addToCartResponse |
		
	queryParams _ Dictionary newFromPairs: { 
		'cartId' . -2 printString . 
		'bookISBN' . 'invalidBook' . 
		'bookQuantity' . '3' 
	}.
	addToCartResponse  _ WebClient htmlSubmit: 'http://localhost:8484/addToCart' fields: queryParams.
	
	self deny: addToCartResponse isSuccess .
	self assert: addToCartResponse code = 404.
	self assert: addToCartResponse content equals: 'Item is not in catalog'.! !
!TusLibrosServerControllerTest methodsFor: 'test - add items' stamp: 'tf 7/10/2019 12:13:45' prior: 50793643!
test11ReciboUnaRespuesta404AlAgregarItemsAUnCarritoInexistente
	| queryParams addToCartResponse |
		
	queryParams _ Dictionary newFromPairs: { 
		'cartId' . -2 printString . 
		'bookISBN' . 'invalidBook' . 
		'bookQuantity' . '3' 
	}.
	addToCartResponse  _ WebClient htmlSubmit: 'http://localhost:8484/addToCart' fields: queryParams.
	
	self deny: addToCartResponse isSuccess .
	self assert: addToCartResponse code = 404.
	self assert: addToCartResponse content equals: 'Invalid cart id'.! !

TusLibrosServerControllerTest removeSelector: #test11ReciboUnaRespuesta404AlAgregarItemsAUnCarritoInexistente!
!TusLibrosServerControllerTest methodsFor: 'test - add items' stamp: 'tf 7/10/2019 12:14:28' prior: 50789898!
test11ReciboUnaRespuesta404AlAgregarItemsDeUnLibroInexistente
	| queryParams addToCartResponse cartCreationResponse cartId |
	
	queryParams _ Dictionary newFromPairs: {
		'username' . testObjectsFactory validUser . 
		'password' . testObjectsFactory validUserPassword 
	}.
	
	cartCreationResponse _ WebClient htmlSubmit: 'http://localhost:8484/createCart' fields: queryParams.
	cartId _ WebUtils jsonDecode: cartCreationResponse content readStream.
	
	queryParams _ Dictionary newFromPairs: { 
		'cartId' . cartId printString . 
		'bookISBN' . 'invalidBook' . 
		'bookQuantity' . '3' 
	}.
	addToCartResponse  _ WebClient htmlSubmit: 'http://localhost:8484/addToCart' fields: queryParams.
	
	self deny: addToCartResponse isSuccess .
	self assert: addToCartResponse code = 404.
	self assert: addToCartResponse content = 'Item is not in catalog'.! !

TusLibrosServerController allInstances do: [:in | in stopListening ; destroy].!
!TusLibrosServerControllerTest methodsFor: 'test - add items' stamp: 'tf 7/10/2019 12:14:47' prior: 50789926!
test12ReciboUnaRespuesta404AlAgregarItemsAUnCarritoInexistente
	| queryParams addToCartResponse|
	
	queryParams _ Dictionary newFromPairs: { 
		'cartId' . '-1835140' . 
		'bookISBN' . 'validBook' . 
		'bookQuantity' . '3' 
	}.
	addToCartResponse  _ WebClient htmlSubmit: 'http://localhost:8484/addToCart' fields: queryParams.
	
	self assert: addToCartResponse code = 404.
	self assert: addToCartResponse content = 'Invalid cart id'.! !
!TusLibrosServerControllerTest methodsFor: 'test - catalogo' stamp: 'tf 7/10/2019 12:15:05' prior: 50789952!
test19AlPedirElCatalogoMeLoDevuelveConCodigo200
	| catalogResponse aCatalog |

		
	catalogResponse _ WebClient htmlSubmit: 'http://localhost:8484/catalog'  fields: Dictionary new.
		
	
	self assert: catalogResponse code equals: 200.
	
	aCatalog _ WebUtils jsonDecode: catalogResponse content readStream .
	self assert: aCatalog notEmpty .
	self assert: aCatalog equals: aSystemFacade catalog . 
	
		! !
!TusLibrosServerControllerTest methodsFor: 'test - checkout' stamp: 'tf 7/10/2019 12:15:24' prior: 50789977!
test14AlHacerCheckoutDeUnCarritoConElementosObtengoUnaRespuestaConCodigo200
	| cartCreationResponse cartId queryParams checkOutResponse expirationDate |
	
	queryParams _ Dictionary newFromPairs: 
		{'username' . testObjectsFactory validUser . 
		  'password' . testObjectsFactory validUserPassword }.
	
	cartCreationResponse _ WebClient htmlSubmit: 'http://localhost:8484/createCart' fields: queryParams.
	cartId _ WebUtils jsonDecode: cartCreationResponse content readStream.
	
	queryParams _ Dictionary newFromPairs: { 
		'cartId' . cartId printString . 
		'bookISBN' . 'validBook' . 
		'bookQuantity' . '3' 
	}.
	WebClient htmlSubmit: 'http://localhost:8484/addToCart' fields: queryParams.

	expirationDate _ testObjectsFactory storeTestObjectsFactory notExpiredMonthOfYear printString copyReplaceAll: ' ' with: '%20'.
	queryParams _ Dictionary newFromPairs: 
		{'cartId' . cartId printString . 
		'creditCardNumber' . testObjectsFactory storeTestObjectsFactory notExpiredCreditCardNumber . 
		'ownersName' . testObjectsFactory storeTestObjectsFactory notExpiredCreditCardOwner . 
		'expirationDate' . expirationDate }.
		
	checkOutResponse _ WebClient htmlSubmit: 'http://localhost:8484/checkoutcart' fields: queryParams .
		
	self assert: checkOutResponse code equals: 200.
	
		! !

----SNAPSHOT----(10 July 2019 12:16:14) TusLibros-Web.image priorSource: 14779261!

----SNAPSHOT----(10 July 2019 12:17:22) TusLibros-Web.image priorSource: 14788646!
!TusLibrosWebClientTest methodsFor: 'as yet unclassified' stamp: 'tf 7/10/2019 12:18:26'!
test09SiAlPedirElCatalogoElServidorDevuelveUnErrorElWebClientLevantaUnaEXcepcion
		
	onHtmlSubmitBlock _ [:url :fields | 
		(WebResponse protocol: 'http' code: 404) content: 'Error!!!!' 
	].

	self should: [defaultWebClient catalog ]
		raise: Error - MessageNotUnderstood 
		withMessageText: 'Error!!!!'.
! !

TusLibrosWebClientTest removeSelector: #test09!
!TusLibrosWebClientTest methodsFor: 'test - checkout' stamp: 'tf 7/10/2019 12:20:31'!
test13LevantaUnaExcepcionAlRecibirUnErrorDelServerSiSeLePideHacerCheckout
		
	onHtmlSubmitBlock _ [:url :fields | 
		(WebResponse protocol: 'http' code: 404) content: 'Error'. 
	].

	self should: [
			defaultWebClient 
				checkOutCartIdentifiedAs: 23 
				withCreditCardNumbered: '0000111122223333' 
				ownedBy: 'Teo' 
				expiringOn: (Month month: 07 year: 2020) .]
		 raise: Error -  MessageNotUnderstood 
		 withMessageText: 'Error'.
	! !

TusLibrosWebClientTest removeSelector: #test13LevantaUnaExcepcionAlRecibirUnErrorDelServer!

----SNAPSHOT----(10 July 2019 12:20:46) TusLibros-Web.image priorSource: 14788730!
!CreateCartWindowModel methodsFor: 'accessing' stamp: 'tf 7/10/2019 12:24:36' prior: 50790398!
password
	^'***'.! !

testObjectsFactory _ TusLibrosWebTestObjectFactory new.!

aSystemFacade _ testObjectsFactory tusLibrosSystemFacade. !

aSystemFacade _ testObjectsFactory tusLibrosSystemFacade. !

aDefaultServerController _ TusLibrosServerController listeningOn: 8080 withFacade: aSystemFacade.!

CreateCartWindow open.!
!CreateCartWindowModel methodsFor: 'accessing' stamp: 'TF 7/9/2019 16:47:19' prior: 50793839!
password
	^password.! !

CreateCartWindow open.!

----SNAPSHOT----(10 July 2019 12:44:49) TusLibros-Web.image priorSource: 14789912!
!TusLibrosServerControllerTest methodsFor: 'test - port' stamp: 'tf 7/10/2019 12:45:44' prior: 50792698!
test02PuedoCrearUnaInstanciaDelServidorQueEscucheEnUnPuertoEspecifico
	| aServerController |
	
	aServerController _ TusLibrosServerController listeningOn: 8888 withFacade: aSystemFacade.
	
	self assert: aServerController port equals: 8888.
	
	aServerController stopListening ; destroy .! !
!TusLibrosServerControllerTest methodsFor: 'test - create cart' stamp: 'tf 7/10/2019 12:46:51' prior: 50789831!
test07IntentarCrearUnCarritoConUnUsuarioMalAutenticadoGeneraUnaRespuestaDeError404
	| httpResponse queryParams |
	
	queryParams _ Dictionary newFromPairs:  { 
		'user' . 'badUser' . 
		'password' . ''
	}.
	httpResponse _ WebClient htmlSubmit: 'http://localhost:8484/createCart' fields: queryParams.
	
	self deny: httpResponse isSuccess.
	self assert: httpResponse code = 404.! !
!TusLibrosServerControllerTest methodsFor: 'test - create cart' stamp: 'tf 7/10/2019 12:47:25' prior: 50789847!
test08AlCrearUnCarritoConUnUsuarioValidoTengoUnaRespuesta200
	| httpResponse queryParams |
	
	queryParams _ Dictionary newFromPairs:  { 
		'username' . 'Prueba' . 
		'password' . 'Prueba'
	}.
	httpResponse _ WebClient htmlSubmit: 'http://localhost:8484/createCart' fields: queryParams.
	
	self assert: httpResponse isSuccess.
	self assert: httpResponse code = 200.! !
!TusLibrosServerControllerTest methodsFor: 'test - create cart' stamp: 'tf 7/10/2019 12:47:38' prior: 50793874!
test07IntentarCrearUnCarritoConUnUsuarioMalAutenticadoGeneraUnaRespuestaDeError404
	| httpResponse queryParams |
	
	queryParams _ Dictionary newFromPairs:  { 
		'user' . 'badUser' . 
		'password' . ''
	}.
	httpResponse _ WebClient htmlSubmit: 'http://localhost:8484/createCart' fields: queryParams.
	
	self deny: httpResponse isSuccess.
	self assert: httpResponse code = 404.
	self assert: httpResponse content equals: nil.! !
!TusLibrosServerControllerTest methodsFor: 'test - create cart' stamp: 'tf 7/10/2019 12:47:59' prior: 50793905!
test07IntentarCrearUnCarritoConUnUsuarioMalAutenticadoGeneraUnaRespuestaDeError404
	| httpResponse queryParams |
	
	queryParams _ Dictionary newFromPairs:  { 
		'user' . 'badUser' . 
		'password' . ''
	}.
	httpResponse _ WebClient htmlSubmit: 'http://localhost:8484/createCart' fields: queryParams.
	
	self deny: httpResponse isSuccess.
	self assert: httpResponse code = 404.
	self assert: httpResponse content equals: 'key not found'.! !
!TusLibrosServerControllerTest methodsFor: 'test - checkout' stamp: 'tf 7/10/2019 12:50:20'!
createCart
	| cartCreationResponse cartId queryParams |
	queryParams _ Dictionary newFromPairs: 
		{'username' . testObjectsFactory validUser . 
		  'password' . testObjectsFactory validUserPassword }.
	
	cartCreationResponse _ WebClient htmlSubmit: 'http://localhost:8484/createCart' fields: queryParams.
	cartId _ WebUtils jsonDecode: cartCreationResponse content readStream.! !
!TusLibrosServerControllerTest methodsFor: 'test - checkout' stamp: 'tf 7/10/2019 12:50:40' prior: 50793939!
createCart
	| cartCreationResponse cartId queryParams |
	
	queryParams _ Dictionary newFromPairs: 
		{'username' . testObjectsFactory validUser . 
		  'password' . testObjectsFactory validUserPassword }.
	
	cartCreationResponse _ WebClient htmlSubmit: 'http://localhost:8484/createCart' fields: queryParams.
	cartId _ WebUtils jsonDecode: cartCreationResponse content readStream.
	
	^cartId .! !
!TusLibrosServerControllerTest methodsFor: 'test - checkout' stamp: 'tf 7/10/2019 12:51:58' prior: 50793753!
test14AlHacerCheckoutDeUnCarritoConElementosObtengoUnaRespuestaConCodigo200
	| cartId queryParams checkOutResponse expirationDate |
	
	cartId _ self createCart .
	
	queryParams _ Dictionary newFromPairs: { 
		'cartId' . cartId printString . 
		'bookISBN' . 'validBook' . 
		'bookQuantity' . '3' 
	}.
	WebClient htmlSubmit: 'http://localhost:8484/addToCart' fields: queryParams.

	expirationDate _ testObjectsFactory storeTestObjectsFactory notExpiredMonthOfYear printString copyReplaceAll: ' ' with: '%20'.
	queryParams _ Dictionary newFromPairs: 
		{'cartId' . cartId printString . 
		'creditCardNumber' . testObjectsFactory storeTestObjectsFactory notExpiredCreditCardNumber . 
		'ownersName' . testObjectsFactory storeTestObjectsFactory notExpiredCreditCardOwner . 
		'expirationDate' . expirationDate }.
		
	checkOutResponse _ WebClient htmlSubmit: 'http://localhost:8484/checkoutcart' fields: queryParams .
		
	self assert: checkOutResponse code equals: 200.
	
		! !
!TusLibrosServerControllerTest methodsFor: 'test - checkout' stamp: 'tf 7/10/2019 12:52:09' prior: 50790020!
test15AlHacerCheckoutDeUnCarritoInexistenteObtengoUnaRespuestaConCodigo404YMensajeDeError
	| cartId queryParams checkOutResponse expirationDate |
	
	cartId _ -10.
	
	expirationDate _ testObjectsFactory storeTestObjectsFactory notExpiredMonthOfYear printString copyReplaceAll: ' ' with: '%20'.
	queryParams _ Dictionary newFromPairs: 
		{'cartId' . cartId printString . 
		'creditCardNumber' . testObjectsFactory storeTestObjectsFactory notExpiredCreditCardNumber . 
		'ownersName' . testObjectsFactory storeTestObjectsFactory notExpiredCreditCardOwner . 
		'expirationDate' . expirationDate }.
		
	checkOutResponse _ WebClient htmlSubmit: 'http://localhost:8484/checkoutcart' fields: queryParams .
		
	self assert: checkOutResponse code equals: 404.
	self assert: checkOutResponse content equals: 'Invalid cart id'
	
		! !
!TusLibrosServerControllerTest methodsFor: 'test - checkout' stamp: 'tf 7/10/2019 12:52:35' prior: 50790049!
test16AlHacerCheckoutDeUnCarritoVacioObtengoUnaRespuestaConCodigo404YUnMensajeDeError
	| cartId queryParams checkOutResponse expirationDate |
	
	cartId _ self createCart .
	
	expirationDate _ testObjectsFactory storeTestObjectsFactory notExpiredMonthOfYear printString copyReplaceAll: ' ' with: '%20'.
	queryParams _ Dictionary newFromPairs: 
		{'cartId' . cartId printString . 
		'creditCardNumber' . testObjectsFactory storeTestObjectsFactory notExpiredCreditCardNumber . 
		'ownersName' . testObjectsFactory storeTestObjectsFactory notExpiredCreditCardOwner . 
		'expirationDate' . expirationDate }.
		
	checkOutResponse _ WebClient htmlSubmit: 'http://localhost:8484/checkoutcart' fields: queryParams .
		
	self assert: checkOutResponse code equals: 404.
	self assert: checkOutResponse content equals: 'Can not check out an empty cart'.
	
		! !
!TusLibrosServerControllerTest methodsFor: 'test - checkout' stamp: 'tf 7/10/2019 12:52:50' prior: 50790089!
test17AlHacerCheckoutDeUnCarritoConElementosConUnaTarjetaInvalidaObtengoUnaRespuestaConCodigo404YUnMensajeDeError
	| cartId queryParams checkOutResponse expirationDate |
	
	cartId _ self createCart .
	
	queryParams _ Dictionary newFromPairs: { 'cartId' . cartId printString . 'bookISBN' . 'validBook' . 'bookQuantity' . '3' }.
	WebClient htmlSubmit: 'http://localhost:8484/addToCart' fields: queryParams.

	expirationDate _ testObjectsFactory storeTestObjectsFactory expiredMonthOfYear printString copyReplaceAll: ' ' with: '%20'.
	queryParams _ Dictionary newFromPairs: 
		{'cartId' . cartId printString . 
		'creditCardNumber' . testObjectsFactory storeTestObjectsFactory notExpiredCreditCardNumber . 
		'ownersName' . testObjectsFactory storeTestObjectsFactory notExpiredCreditCardOwner . 
		'expirationDate' . expirationDate }.
		
	checkOutResponse _ WebClient htmlSubmit: 'http://localhost:8484/checkoutcart' fields: queryParams .
		
	self assert: checkOutResponse code equals: 404.
	self assert: checkOutResponse content equals: 'Can not charge an expired credit card'.
	
		! !
!TusLibrosServerControllerTest methodsFor: 'test - list purchase' stamp: 'tf 7/10/2019 12:53:50' prior: 50790163!
test22AlPedirLasComprasDeUnUsuarioConComprasReciboCodigo200YDiccionarioAcorde
	| cartId queryParams expirationDate purchasesResponse |
	
	cartId _ self createCart .
	
	queryParams _ Dictionary newFromPairs: { 'cartId' . cartId printString . 'bookISBN' . 'validBook' . 'bookQuantity' . '3' }.
	WebClient htmlSubmit: 'http://localhost:8484/addToCart' fields: queryParams.

	expirationDate _ testObjectsFactory storeTestObjectsFactory notExpiredMonthOfYear printString copyReplaceAll: ' ' with: '%20'.
	queryParams _ Dictionary newFromPairs: 
		{'cartId' . cartId printString . 
		'creditCardNumber' . testObjectsFactory storeTestObjectsFactory notExpiredCreditCardNumber . 
		'ownersName' . testObjectsFactory storeTestObjectsFactory notExpiredCreditCardOwner . 
		'expirationDate' . expirationDate }.
		
	WebClient htmlSubmit: 'http://localhost:8484/checkoutcart' fields: queryParams .
	
	queryParams _ Dictionary newFromPairs: 
		{'username' . testObjectsFactory validUser . 
		  'password' . testObjectsFactory validUserPassword }.
		
	purchasesResponse _ WebClient htmlSubmit: 'http://localhost:8484/listpurchases'  fields: queryParams.
		
	self assert: purchasesResponse code equals: 200.
	self assert: (WebUtils jsonDecode: (purchasesResponse content readStream )) 
		equals: (Dictionary new 
					at: 'validBook' 
					put: 3*(testObjectsFactory storeTestObjectsFactory itemSellByTheStorePrice); yourself ).
	
		! !
!TusLibrosServerControllerTest methodsFor: 'test - add items' stamp: 'tf 7/10/2019 12:54:21' prior: 50793533!
test10ReciboUnaRespuesta200AlAgregarItemsAlCarrito
	| cartId queryParams addToCartResponse|
	
	cartId _ self createCart .
	
	queryParams _ Dictionary newFromPairs: { 
			'cartId' . cartId printString . 
			'bookISBN' . 'validBook' . 
			'bookQuantity' . '3' 
	}.
	addToCartResponse  _ WebClient htmlSubmit: 'http://localhost:8484/addToCart' fields: queryParams.

	self assert: addToCartResponse isSuccess .
	self assert: addToCartResponse code = 200.! !
!TusLibrosServerControllerTest methodsFor: 'test - add items' stamp: 'tf 7/10/2019 12:54:36' prior: 50793686!
test11ReciboUnaRespuesta404AlAgregarItemsDeUnLibroInexistente
	| queryParams addToCartResponse cartId |
	
	cartId _ self createCart .
	
	queryParams _ Dictionary newFromPairs: { 
		'cartId' . cartId printString . 
		'bookISBN' . 'invalidBook' . 
		'bookQuantity' . '3' 
	}.
	addToCartResponse  _ WebClient htmlSubmit: 'http://localhost:8484/addToCart' fields: queryParams.
	
	self deny: addToCartResponse isSuccess .
	self assert: addToCartResponse code = 404.
	self assert: addToCartResponse content = 'Item is not in catalog'.! !

----SNAPSHOT----(10 July 2019 12:56:59) TusLibros-Web.image priorSource: 14790608!

----SNAPSHOT----(10 July 2019 12:58:37) TusLibros-Web.image priorSource: 14801203!

----QUIT----(10 July 2019 13:00:35) TusLibros-Web.image priorSource: 14801287!